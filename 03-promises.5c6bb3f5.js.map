{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAEL,WAAUC,SAElC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACvBN,EACFK,EAAQF,GAERG,EAAOH,E,IAlCEI,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOH,EAAMI,cAAcf,MAAMgB,OACzCC,EAASH,OAAOH,EAAMI,cAAcE,OAAOD,OAC3CE,EAAOJ,OAAOH,EAAMI,cAAcG,KAAKF,OAElCG,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,YAAW,WACT1B,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,GAC5DA,E,IAEJ0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,YAAW,WACT1B,EAAA2B,OAAOC,QAAQ,sBAAqCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,GACzDA,E,IAEPa,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  let amount = Number(event.currentTarget.amount.value);\n  let step = Number(event.currentTarget.step.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promiseResult = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(promiseResult);\n    } else {\n      reject(promiseResult);\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promiseResult","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","amount","step","position1","then","param","setTimeout","Notify","failure","concat","catch"],"version":3,"file":"03-promises.5c6bb3f5.js.map"}